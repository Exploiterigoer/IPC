***如果寄存器存的是浮点数据，指令要取连续两个寄存器地址的数据，这时得到的只是一个浮点数
***如果寄存器存的是整型数据，指令要取连续两个寄存器地址的数据，这时得到的为2个整型的数据

10进制						3.67
16进制						0x406AE148
							 01000000 01101010 11100001 01001000
2进制						(01000000 01101010 11100001 01001000)(2)
符号位						s = 0
8位指数位					e = (10000000)(2) = (128)(10)
23位尾数					11010101110000101001000
尾数前补1.  				1.11010101110000101001000
移位(e - 127,正右负左)	 	11.1010101110000101001000                                        
浮点数2进制					11.1010101110000101001000
浮点数2进制转10进制			= 1*2^1 + 1*2^0 + 1*2^-1 + 1*2^-3 + 1*2^-5 + 1*2^-7 + 1*2^-8 + 1*2^-9 + 1*2^-14
							= 2 + 1 + 0.5 +0.125
							= 3.66498291015625 
							
			=>  (0x406AE148)(16) = (3.66498291015625)(10)
				
	01000000 01101010 11100001 01001000
& 	00000000 11111111 11111111 11111111
------------------------------------------
	00000000 01101010 11100001 01001000 

				 


						

-4.21574e+007	=>	11001100001000001101000101010110‬
				=>	1 10011000 01000001101000101010110‬
				=>	1.01000001101000101010110‬ *2^25
				=>	10100000110100010101011000.0
				=>	-42157400.0




-1.39812e+007	=>	11001011010101010101010111110110 
				=>	1 10010110 10101010101010111110110
				=>	1.10101010101010111110110 *2^23
				=>	110101010101010111110110.0


-1.1e-007		=>	10110011111011000011100100100011 
				=>	1 01100111 11011000011100100100011
				=>	1.11011000011100100100011 *2^-24
				=>	00000000000000000000000111011000011100100100011
					00000000000000000000000111011000011100100100100
				=>	1.099999948905861e-07

-1e-008			=>	10110010001010111100110001110111 
				=>	1 01100100 01010111100110001110111
				=>	1.01010111100110001110111 *2^-27
				=>	000000000000000000000000000101010111100110001110111

					
					 

					
					
1 10011000111 0111 1011 0011 0010 1011 0011 1001 0010 0100 1011 0011 1110 1100 					
					
		